@page "/managegroupinvitations"
@using HearYe.Client.Data
@using HearYe.Shared;
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject StateContainer State
@inject IHearYeService Service
@attribute [Authorize]

<PageTitle>Manage Group Invitations</PageTitle>

<div class="container-lg">
    <div class="d-flex flex-column align-items-center">
        <div class="w-md-75">
            <h1 class="mt-3 mb-3">Manage group invitations</h1>
            <hr />
            @if (bannerMessage is not null && bannerType is not null)
            {
                <div class="alert @bannerType" role="alert">
                    @bannerMessage
                </div>
            }
            <h4>Invitations</h4>
            <div class="form-check form-switch">
                <label for="acceptInvitationToggle" class="form-check-label">Accept new invitations</label>
                <input id="acceptInvitationToggle" class="form-check-input" type="checkbox" role="switch"
                       value="@acceptInvitations" checked="@acceptInvitations" @onchange="ToggleAcceptInvitation" />
            </div>
            <div class="mt-3" />
            <a class="text-reset text-decoration-none" role="button" data-bs-toggle="collapse" data-bs-target="#invitationsSent"
               aria-expanded="true" aria-controls="invitationsSent" @onclick="ToggleInvitationsSentVisible">
                <h4 class="@(invitationsSentVisible ? "addUpArrow" : "addDownArrow")">Invitations Sent</h4>
            </a>
            <div class="collapse show" id="invitationsSent">
                <div class="d-flex flex-column w-100">

                    @if (invitationsSentList is not null && invitationsSentList.Any())
                    {
                        @foreach (var invitation in invitationsSentList)
                        {
                            <div class="card mb-2">
                                <div class="card-body d-flex justify-content-between align-items-center">
                                    <span class="card-text">
                                        @invitation.InvitedUserName invited to @invitation.MessageGroupName
                                    </span>
                                    <button type="button" class="btn btn-danger" @onclick="(() => DeleteInvitation(invitation.Id))">Delete</button>
                                </div>
                            </div>
                        }
                        @if (invitationsSentList.Count() >= 15)
                        {
                            <p class="text-muted">Only the 15 latest invitations are displayed.</p>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No invites to display.</p>
                    }
                </div>
            </div>
            <div class="mt-3" />
            <a class="text-reset text-decoration-none" role="button" data-bs-toggle="collapse" data-bs-target="#invitationsReceived"
               aria-expanded="true" aria-controls="invitationsReceived" @onclick="ToggleInvitationsReceivedVisible">
                <h4 class="@(invitationsReceivedVisible ? "addUpArrow" : "addDownArrow")">Invitations Received</h4>
            </a>
            <div class="collapse show" id="invitationsReceived">
                <div class="d-flex flex-column w-100">
                    @if (invitationsReceivedList is not null && invitationsReceivedList.Any())
                    {
                        @foreach (var invitation in invitationsReceivedList)
                        {
                            <div class="card mb-2">
                                <div class="card-body d-flex justify-content-between align-items-center">
                                    <span class="card-text">
                                        @invitation.InvitingUserName is inviting you to @invitation.MessageGroupName
                                    </span>
                                    <div class="d-flex gap-2">
                                        <button type="button" class="btn btn-success" @onclick="(() => AcceptInvitation(invitation.Id))">Accept</button>
                                        <button type="button" class="btn btn-danger" @onclick="(() => DeclineInvitation(invitation.Id))">Decline</button>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (invitationsReceivedList.Count() >= 15)
                        {
                            <p class="text-muted">Only the 15 latest invitations are displayed.</p>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No invites to display.</p>
                    }
                </div>
            </div>
            <hr />
            <div class="d-flex gap-2 mt-3">
                <a href="/" class="btn btn-secondary">Back to home</a>
                <a href="/allgroups" class="btn btn-primary">Send an invite</a>
            </div>
        </div>
    </div>
</div>