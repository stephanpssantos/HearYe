@page "/newgroup"
@layout AltLayout
@using HearYe.Client.Data
@using HearYe.Shared
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager Navigation
@inject StateContainer State
@inject IHearYeService Service
@attribute [Authorize]

<PageTitle>New Group</PageTitle>

<div class="container-lg">
    <div class="d-flex flex-column align-items-center">
        <div class="w-md-75">
            <h1 class="mt-3 mb-3">Create a new group</h1>
            <div class="card">
                <div class="card-body">
                    <EditForm EditContext="@editContext" OnSubmit="@HandleNewGroup" class="form">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        @if (bannerMessage is not null && bannerType is not null)
                        {
                            <div class="alert @bannerType" role="alert">
                                @bannerMessage
                            </div>
                        }
                        <div class="mb-3">
                            <label for="newGroupName" class="form-label">New group name</label>
                            <InputText @bind-Value="newMessageGroup.MessageGroupName" id="newGroupName" class="form-control"/>
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </EditForm>
                </div>
            </div>
            <a href="/" class="btn btn-secondary mt-3">Back to home</a>
        </div>
    </div>
</div>

@code {
    private MessageGroup newMessageGroup = new();
    private EditContext? editContext;
    private string? bannerMessage;
    private string? bannerType;

    protected override void OnInitialized()
    {
        editContext = new(newMessageGroup);
    }

    private async void HandleNewGroup()
    {
        bool validDbId = int.TryParse(State.UserDbId, out int userDbId);

        if (!validDbId)
        {
            Navigation.NavigateTo("/");
            return;
        }

        newMessageGroup.CreatedDate = DateTimeOffset.Now;

        if (editContext != null && editContext.Validate())
        {
            MessageGroup? newGroup = await Service.NewMessageGroupAsync(newMessageGroup!.MessageGroupName);
            if (newGroup is null)
            {
                bannerType = "alert-warning";
                bannerMessage = "⚠ Group creation failed. Please try again later.";
                StateHasChanged();
                return;
            }

            Navigation.NavigateTo("/allgroups");
        }
    }
}
