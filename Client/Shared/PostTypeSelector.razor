@using HearYe.Client.Data
@using HearYe.Shared
@inject IHearYeService Service
@inject StateContainer State

<ul class="nav nav-pills col-lg-4">
    <li class="nav-item">
        <a class="nav-link @checkClass(PostTypes.New)" aria-current="@checkAria(PostTypes.New)" 
            onclick="@(() => setPostType(PostTypes.New))" role="button">New</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @checkClass(PostTypes.Acknowledged)" aria-current="@checkAria(PostTypes.Acknowledged)" 
            onclick="@(() => setPostType(PostTypes.Acknowledged))" role="button">Acknowledged</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @checkClass(PostTypes.Stale)" aria-current="@checkAria(PostTypes.Stale)" 
            onclick="@(() => setPostType(PostTypes.Stale))" role="button">Old</a>
    </li>
</ul>

@code {
    protected override void OnInitialized()
    {
        State.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        State.OnChange -= StateHasChanged;
    }

    private async void setPostType(PostTypes type)
    {
        if (State.ActivePostType == type)
        {
            return;
        }

        State.ActivePostType = type;
        IEnumerable<Post>? postCollection;

        switch(type)
        {
            case PostTypes.Acknowledged:
                postCollection = await Service.GetAcknowledgedPostsAsync(State.ActiveGroupId.ToString());
                break;
            case PostTypes.Stale:
                postCollection = await Service.GetStalePostsAsync(State.ActiveGroupId.ToString());
                break;
            case PostTypes.New:
            default:
                postCollection = await Service.GetNewPostsAsync(State.ActiveGroupId.ToString());
                break;
        }

        State.PostCollection = postCollection;
    }

    private string checkClass(PostTypes type)
    {
        return State.ActivePostType == type ? "active" : "";
    }

    private string checkAria(PostTypes type)
    {
        return State.ActivePostType == type ? "page" : "false";
    }
}
